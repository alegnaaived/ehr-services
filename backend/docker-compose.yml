name: ehr-backend
networks:
  backend-network:
    name: backend-network
services:
  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=/var/lib/postgresql/data/pgdata
    command: postgres -c config_file=/etc/postgresql/postgresql.conf 
    volumes:
      - ./pgdata:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
    ports:
      - '5432:5432'
    networks:
      - backend-network
  app-backend:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/backend
    environment:
      NODE_ENV: development
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
      DB_HOST: ${DB_HOST}
    deploy:
      endpoint_mode: vip
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    depends_on:
      - db
    networks:
      - backend-network
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_CONFIG_SERVER_MODE=${PGADMIN_CONFIG_SERVER_MODE}
    ports:
      - '5050:80'
    depends_on:
      - db
    networks:
      - backend-network
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "3000:3000"  # Load balancer port
    depends_on:
      - app-backend
    networks:
      - backend-network